{"version":3,"file":"static/webpack/static/development/pages/permissions.js.cfcafb2671430edd09fb.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import {Query, Mutation} from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n    'ADMIN',\n    'USER',\n    'ITEMCREATE',\n    'ITEMUPDATE',\n    'ITEMDELETE',\n    'PERMISSIONUPDATE',\n];\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n    mutation updatePermissions($permissions: [Permission],\n    $userId: ID!) {\n        updatePermissions(permissions: $permissions, userId: \n        $userId) {\n            id\n            permissions\n            name\n            email\n        }\n    }\n`;\n\nconst ALL_USERS_QUERY = gql`\n    query {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\n\nconst Permissions = props => (\n    <Query query={ALL_USERS_QUERY}>\n        {({data, loading, error}) => (\n            <div>\n                <Error error={error} />\n                <div>\n                    <h2>Manage Permissions</h2>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Email</th>\n                                {possiblePermissions.map(permission => <th key={permission}>{permission}</th>)}\n                                <th>Update</th>\n                            </tr>\n                        </thead>\n                        <tbody>{data.users.map(user => <UserPermissions\n                        user={user} key={user.id} />)}</tbody>\n                    </Table>\n                </div>\n            </div>\n        )}\n    </Query>\n);\n\nclass UserPermissions extends React.Component {\n    static propTypes = {\n        user: PropTypes.shape({\n            name: PropTypes.string,\n            email: PropTypes.string,\n            id: PropTypes.string,\n            permissions: PropTypes.array,\n        }).isRequired,\n    };\n    state = {\n        permissions: this.props.user.permissions,\n    };\n    handlePermissionChange = e => {\n        const checkbox = e.target;\n        // take a copy of the updated permissions\n        let updatedPermissions = [this.state.permissions]\n        // see if I need to remove or add this permission\n        if(checkbox.checked) {\n            // add it in\n            updatedPermissions.push(checkbox.value)\n        } else {\n            updatedPermissions = updatedPermissions.filter\n            (permission => permission !== checkbox.value);\n        }\n        this.setState({permissions: updatedPermissions});\n    };\n\n    render() {\n        const user = this.props.user;\n        return (\n            <Mutation mutation={UPDATE_PERMISSIONS_MUTATION}\n                variables={{\n                    permissions: this.state.permissions,\n                    userId: this.props.user.id\n                }}>\n                {(updatePermissions, {loading, error}) => (\n                    <>\n                        {error && <tr><td colspan=\"8\"><Error error=\n                        {error} /></td></tr>}\n                        <tr>\n                            <td>{user.name}</td>\n                            <td>{user.email}</td>\n                            {possiblePermissions.map(permission => (\n                                <td key={permission}>\n                                    <label htmlFor={`${user.id}-permission-$\n                                    {permission}`}>\n                                        <input \n                                        id={`${user.id}-permission-${permission}`} \n                                        type=\"checkbox\" \n                                        checked={this.state.permissions.includes\n                                            (permission)}\n                                            value={permission}\n                                            onchange={this.handlePermissionChange}\n                                            />\n                                    </label>\n                                </td>\n                            ))}\n                            <td>\n                                <SickButton\n                                    type=\"button\"\n                                    disabled={loading}\n                                    onClick={updatePermissions}\n                                    >Updat{loading ? 'ing' : 'e'}\n                                </SickButton>\n                            </td>\n                        </tr>\n                    </>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default Permissions;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAadA;AAFA;AACA;AAwBA;;;;;;;;;;;;;;;;;;AASA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBA;AAmCA;;;;AAtEA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAuEA;;;;A","sourceRoot":""}